/*We need the height property in .grid-container to be 100% in order for our page to fill up the screen.
However using a percentage makes the height dependant on it's parent. So we first set the parents' height 
to also be 100% (height and body)*/
html, body{
    height: 100vh;
    width: 100vw;
    margin: 0; /*remove the margin, so that we dont create invisible padding, creating a vertical scrollbar*/
}

.navBar { 
    grid-area: header; 
    height: 9.09090909090909vh;
    width: 100vw;
    
    display: flex;
    justify-content: flex-end;
    flex-wrap: nowrap;
    overflow: hidden;
}

.navBarItem{
    max-height: 100%;
    visibility: hidden;
    cursor: pointer;
    user-select: none;
}

#navToggleButton{
    margin-right: auto !important; 
    max-height: auto; 
    visibility: visible !important;
}

.entireBody { 
    grid-area: body; 
    margin: 0;
    height: 81.81818181818vh;
    width: 100vw;
}

.entireFooter { 
    grid-area: footer; 
    height: 9.09090909090909vh;
    width: 100vw;
    
    display: flex;
    justify-content: center;
    flex-wrap: nowrap;
    overflow: hidden;
}

.footerItems{
    max-height: 9.09090909090909vh;
    max-width: 100vw;
    height: auto;
    margin-right: 0;
    cursor: pointer;
    user-select: none;
    padding-top: 10px;
}

/*Setting the ratio of header to body to footer 1-20-1*/
.grid-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 9fr 1fr;
    grid-template-areas:
        'header'
        'body'
        'footer';
    height: 100vh;
    width: 100vw;
    margin: 0;
}




/*----------------------PLAY MENU CSS--------------------------------*/
.playMenu{
    position: absolute;
    top: 50%;
    left: 50%;
    transform:translate(-50%, -50%);
    width: 80%;
    height: 70%;
    
    overflow: hidden;
    
    
    display: grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: 5% 75% 20%;
    grid-template-areas:
        'xbarLeft xbarRight'
        'playVSFriendPrompt playOnlinePrompt'
        'friendRadioButtonBar onlineRadioButtonBar';
}

.playVSFriendPrompt{
    grid-area: playVSFriendPrompt;
    text-align: center;
    font-size:6vmin; /*vmin makes font sizes relative to the screen size*/
    background-color: blue;
    text-decoration: none;
    
    display: flex;
    justify-content: center;
    align-items: center;
    
    overflow: hidden;
}

.xbarLeft{
    grid-area: xbarLeft;
    background-color: blue;
}

.xbarRight{
    grid-area: xbarRight;
    background-color: red;
}

.friendRadioButtonBar{
    grid-area: friendRadioButtonBar;
    background-color: blue;
}

.playOnlinePrompt{
    grid-area: playOnlinePrompt;
    text-align: center;
    font-size:6vmin; /*vmin makes font sizes relative to the screen size*/
    background-color: red;
    text-decoration: none;
    
    display: flex;
    justify-content: center;
    align-items: center;
        
    overflow: hidden;
}

.onlineRadioButtonBar{
    grid-area: onlineRadioButtonBar;
    background-color: red;
}

.friendRadioButtonBar, .onlineRadioButtonBar {
    display: grid;
    grid-template-areas:
        'publicRadioButton friendRadioButton privateRadioButton';
    font-size:4vmin; /*vmin makes font sizes relative to the screen size*/
    text-align: center;
        
    overflow: hidden;
}

.publicRadioButton{
    grid-area: publicRadioButton;    
}

.friendRadioButton{
    grid-area: friendRadioButton;
}

.privateRadioButton{
    grid-area: privateRadioButton;
}

/* increases the size of radio buttons*/
input[type="radio"] {
    -ms-transform: scale(1.5); 
    -webkit-transform: scale(1.5);
    transform: scale(1.5);
    cursor: pointer;
}

.playOnlinePrompt, .playVSFriendPrompt, .friendRadioButtonBar, 
.onlineRadioButtonBar, .publicRadioButton, .friendRadioButton, .privateRadioButton{
    cursor: pointer;
    color: white;
}

.basicPopUpMenu{
    position: absolute;
    top: 50%;
    left: 50%;
    transform:translate(-50%, -50%);
    width: 80%;
    height: 70%;
    
    display: grid;
    grid-template-rows: 5% 95%;
    grid-template-areas: 
        'xbarLeft xbarRight'
        'basicPopUpMenuCell basicPopUpMenuCell';
}

.basicPopUpMenuCell{
    grid-area: basicPopUpMenuCell;
    text-align: center;
    background-color: red;
    color: white;
    
    display: flex;
    justify-content: center;
    align-items: center;
}
/*------------------------------------------------------------------------*/